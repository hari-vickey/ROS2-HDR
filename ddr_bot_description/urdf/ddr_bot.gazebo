<?xml version="1.0" ?>
<robot name="ddr_bot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Red" />
<xacro:property name="green_color" value="Gazebo/Green" />
<xacro:property name="black_color" value="Gazebo/Black" />
<xacro:property name="yellow_color" value="Gazebo/Yellow" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <!-- Plugin update rate in Hz -->
    <update_rate>100</update_rate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <left_joint>left_back_wheel_joint</left_joint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <right_joint>right_back_wheel_joint</right_joint>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <max_wheel_acceleration>4.0</max_wheel_acceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <max_wheel_torque>20</max_wheel_torque>

    <!-- Odometry frame, defaults to `odom` -->
    <odometry_frame>odom</odometry_frame>
    <odometry_topic>odom</odometry_topic>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robot_base_frame>base_link</robot_base_frame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometry_source>1</odometry_source>

    <!-- Robot Wheel Seperation Distance in m -->
    <!-- <wheel_separation>0.1495</wheel_separation> -->

    <!-- Robot Wheel Diameter in m -->
    <!-- <wheel_diameter>0.074</wheel_diameter> -->

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publish_odom>true</publish_odom>
    <!-- When true, publish coordinate transform from odom to base_footprint -->
    <publish_odom_tf>false</publish_odom_tf>
    <!-- When true, publish coordinate transform from base_link to the wheels -->
    <publish_wheel_tf>false</publish_wheel_tf>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <!-- <legacy_mode>false</legacy_mode> -->

    <!-- Change the ROS topic we will publish the odometry data to -->
    <ros>
      <remapping>odom:=/odometry</remapping>
    </ros>
  </plugin>
</gazebo>

<gazebo reference="base_link">
    <sensor name="br_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="bytes_imu" filename="libgazebo_ros_imu_sensor.so">
            <ros>
                <namespace>imu</namespace>
                <remapping>~/out:=data</remapping>
            </ros>
            <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>100</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.00</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.02000</min>
            <max>2.5</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="seat_1">
  <material>${green_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_back_wheel_rim_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_back_wheel_rim_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_front_wheel_rim_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_front_wheel_rim_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_back_wheel_tyre_1">
  <material>${black_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_front_wheel_tyre_1">
  <material>${black_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_back_wheel_tyre_1">
  <material>${black_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_front_wheel_tyre_1">
  <material>${black_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

</robot>
